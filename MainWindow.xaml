<Window x:Class="DesktopOrganizerWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:viewmodel="clr-namespace:DesktopOrganizerWPF.ViewModel"
        d:DataContext="{d:DesignInstance Type=viewmodel:MainWindowViewModel, IsDesignTimeCreatable=True}"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        mc:Ignorable="d"     
        Title="Desktop Organizer" Height="350" Width="650" FontFamily="Bahnschrift SemiLight" Icon="Resources/file.ico" WindowStartupLocation="CenterScreen" ResizeMode="CanMinimize" FontSize="14" 
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" xmlns:local="clr-namespace:DesktopOrganizer" FontStyle="Italic">
    <Window.Resources>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
            <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFECF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" Background="{StaticResource ComboBox.Static.Background}" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate1" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <!--<ContentPresenter x:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>-->
                <ContentPresenter x:Name="contentPresenter" Content="Extensions" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <Window.Effect>
        <DropShadowEffect/>
    </Window.Effect>
    <Window.Background>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF8EBDD8" Offset="0.4"/>
            <GradientStop Color="#FFD7BA7D" Offset="1"/>
        </LinearGradientBrush>
    </Window.Background>
    <Grid ShowGridLines="False">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="20" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="20" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="20" />
        </Grid.RowDefinitions>

        <TextBlock Text="Desktop Organizer" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2" FontSize="32" Margin="0,0,0,10" FontFamily="Bahnschrift SemiLight"/>

        <!-- <TextBlock Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="5" FontSize="30" FontStyle="Italic" FontWeight="SemiBold" Margin="0,0,0,10" >         
            <InlineUIContainer>
                <Image Source="Resources/file.ico" Height="36" Margin="0,0,0,-10" ></Image>
            </InlineUIContainer>
             <Run>Desktop Organizer</Run>
        </TextBlock>-->

        <!--<Button Background="{x:Null}" Click="Button_Click">
            <Image Source="Resources/Settings.png"/>
        </Button>-->

        <Menu x:Name="BarMenu" Grid.Column="0" Grid.ColumnSpan="8" FontSize="14" FontFamily="Bahnschrift SemiBold" FlowDirection="RightToLeft" Background="{x:Null}">
            <MenuItem Header="Settings" Grid.Column="7" FlowDirection="LeftToRight">
                <MenuItem.Icon>
                    <Image Source="Resources/Settings.png"/>
                </MenuItem.Icon>
                <CheckBox Content="Auto Organize" IsChecked="{Binding AutoOrganize}"/>
                <MenuItem Header="Change Language">
                    <MenuItem Header="Turkish"/>
                    <MenuItem Header="English"/>
                </MenuItem>
            </MenuItem>
        </Menu>

        <!--<Canvas x:Name="OverlayCanvas" HorizontalAlignment="Right" VerticalAlignment="Center" Panel.ZIndex="99">
            <local:SettingsPanel x:Name="SettingsPanel" Width="250" Height="50" Visibility="Collapsed"/>
        </Canvas>-->

        <TextBlock Text="Target Folder :"
               Grid.Column ="1" Grid.Row="2" Grid.ColumnSpan="1" FontSize="18" Margin="0,0,10,10" FontFamily="Bahnschrift SemiLight"/>

        <TextBox x:Name="targetFolderTextBox" IsReadOnly="True"
                 Grid.Column="2" Grid.Row="2" Grid.ColumnSpan="3"
                 Text="{Binding TargetFolder, Mode=TwoWay}" Margin="0,0,0,10" Background="White"/>

        <Button x:Name="targetFolderBrowseButton" Content="Browse" 
                Grid.Column="6" Grid.Row="2" Command="{Binding ChooseFolderCommand}" Margin="5,0,5,10" Background="White"/>

        <CheckBox Grid.Column="1" Grid.Row="3" Margin="0,10,0,0" Content="Organize Audio Files" IsChecked="{Binding AudioOrganizer.Organize}"/>
        <TextBlock Grid.Column="2" Grid.Row="3" Grid.ColumnSpan="1" Margin="10,10,0,0"  Text="Folder Name :" />
        <TextBox  Grid.Column="3" Grid.Row="3" Grid.ColumnSpan="1" Width="100" Margin="10,10,0,0" Text="{Binding AudioOrganizer.FolderName, Mode=TwoWay}"/>
        <ComboBox Template="{DynamicResource ComboBoxTemplate1}" Grid.Column="4" Grid.Row="3" Margin="5,10,0,0" Width="100" Text="Extensions" IsReadOnly="True" IsEditable="False" ItemsSource="{Binding AudioOrganizer.Extensions}">
            <ComboBox.Background>
                <LinearGradientBrush EndPoint="0,1">
                    <GradientStop Color="White"/>
                    <GradientStop Color="White" Offset="1"/>
                </LinearGradientBrush>
            </ComboBox.Background>
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <CheckBox Content="{Binding ExtensionName}" IsChecked="{Binding IsSelected}" Command="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=DataContext.NamesChangedCommand}"/>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>

        <CheckBox Grid.Column="1" Grid.Row="4" Margin="0,10,0,0" Content="Organize Program Files" IsChecked="{Binding ProgramOrganizer.Organize}"/>
        <TextBlock Grid.Column="2" Grid.Row="4" Margin="10,10,0,0" Text="Folder Name :" />
        <TextBox  Grid.Column="3" Grid.Row="4" Grid.ColumnSpan="1" Margin="10,10,0,0" Text="{Binding ProgramOrganizer.FolderName, Mode=TwoWay}"/>
        <ComboBox Template="{DynamicResource ComboBoxTemplate1}" Grid.Column="4" Grid.Row="4" Margin="5,10,0,0" Text="Extensions" IsReadOnly="True" IsEditable="False" ItemsSource="{Binding ProgramOrganizer.Extensions}">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <CheckBox Content="{Binding ExtensionName}" IsChecked="{Binding IsSelected}"/>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>

        <CheckBox Grid.Column="1" Grid.Row="5" Margin="0,10,0,0" Content="Organize Image Files" IsChecked="{Binding ImageOrganizer.Organize}"/>
        <TextBlock Grid.Column="2" Grid.Row="5" Margin="10,10,0,0" Text="Folder Name :" />
        <TextBox  Grid.Column="3" Grid.Row="5" Grid.ColumnSpan="1" Margin="10,10,0,0" Text="{Binding ImageOrganizer.FolderName, Mode=TwoWay}"/>
        <ComboBox Template="{DynamicResource ComboBoxTemplate1}" Grid.Column="4" Grid.Row="5" Margin="5,10,0,0" Text="Extensions" IsReadOnly="True" IsEditable="False" ItemsSource="{Binding ImageOrganizer.Extensions}">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <CheckBox Content="{Binding ExtensionName}" IsChecked="{Binding IsSelected}"/>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>

        <CheckBox Grid.Column="1" Grid.Row="6" Margin="0,10,0,0" Content="Organize Document Files" IsChecked="{Binding DocumentOrganizer.Organize}"/>
        <TextBlock Grid.Column="2" Grid.Row="6" Margin="10,10,0,0" Text="Folder Name :" />
        <TextBox  Grid.Column="3" Grid.Row="6" Grid.ColumnSpan="1" Margin="10,10,0,0" Text="{Binding DocumentOrganizer.FolderName, Mode=TwoWay}"/>
        <ComboBox Template="{DynamicResource ComboBoxTemplate1}" Grid.Column="4" Grid.Row="6" Margin="5,10,0,0" Text="Extensions" IsReadOnly="True" IsEditable="False" ItemsSource="{Binding DocumentOrganizer.Extensions}">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <CheckBox Content="{Binding ExtensionName}" IsChecked="{Binding IsSelected}"/>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>

        <CheckBox Grid.Column="1" Grid.Row="7" Grid.ColumnSpan="1" Margin="0,10,0,0" Content="Organize Compressed Files" IsChecked="{Binding CompressedOrganizer.Organize}"/>
        <TextBlock Grid.Column="2" Grid.Row="7" Margin="10,10,0,0" Text="Folder Name :" />
        <TextBox  Grid.Column="3" Grid.Row="7" Grid.ColumnSpan="1" Margin="10,10,0,0" Text="{Binding CompressedOrganizer.FolderName, Mode=TwoWay}"/>
        <ComboBox Template="{DynamicResource ComboBoxTemplate1}" Grid.Column="4" Grid.Row="7" Margin="5,10,0,0" Text="Extensions" IsReadOnly="True" IsEditable="False" ItemsSource="{Binding CompressedOrganizer.Extensions}">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <CheckBox Content="{Binding ExtensionName}" IsChecked="{Binding IsSelected}"/>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>

        <!--<CheckBox Grid.Column="6" Grid.Row="7" Margin="5,0,0,0" Grid.ColumnSpan="2" Content="Auto Organize" HorizontalAlignment="Left" VerticalAlignment="Bottom" IsChecked="{Binding AutoOrganize}"/>-->
        <Button Content="Organize" Grid.Column="6" Grid.Row="8" Height="25" Command="{Binding OrganizeFilesCommand}" Margin="5,0,5,0" Background="White" />
    </Grid>
</Window>
